<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Influx on Javier Rodríguez</title><link>https://javier-rodriguez.com/tags/influx/</link><description>Recent content in Influx on Javier Rodríguez</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Sat, 01 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://javier-rodriguez.com/tags/influx/index.xml" rel="self" type="application/rss+xml"/><item><title>Monitorizando nuestro servidores con Grafana, Influx Telegraph</title><link>https://javier-rodriguez.com/post/2020-08-01-monitorizando-con-grafana-influx-telegraph/</link><pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate><guid>https://javier-rodriguez.com/post/2020-08-01-monitorizando-con-grafana-influx-telegraph/</guid><description>Bueno vamos a acceder ahora al servidor cliente para poder enviarle métricas de nuestro servidor para ello vamos a utiliza telegraph Configuramos nginx comprobamos si los módulos para geo y status de nginx estan activados. Añadimos el ćodigo suficiente para poder comprobar el status de nginx, para ello nos dirigimos a la carpeta
$&amp;gt; /etc/ningx/status Creamos un archivo denominado status.conf
server { listen 127.0.0.1:9090; location /nginx_status { stub_status on; access_log off; allow 127.</description></item><item><title>Monitorizando nuestro servidores con Grafana, Influx Telegraph</title><link>https://javier-rodriguez.com/post/2020-07-01-monitorizando-con-grafana-influx-telegraph/</link><pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate><guid>https://javier-rodriguez.com/post/2020-07-01-monitorizando-con-grafana-influx-telegraph/</guid><description>Bueno muchas veces tenemos que monitorizar diveras apps, y para no estar pasando de un pantalla a otra nos interesa tenerlo centralizado en un único punto.
En la máquina Bastión
1º Creamos un directiorio dentro de:
$&amp;gt;\opt\monitoring En el crearemos el siguiente script para docker-compose
version: &amp;#34;2&amp;#34; services: grafana: image: grafana/grafana container_name: grafana restart: always ports: - 3000:3000 networks: - monitoring volumes: - grafana-volume:/var/lib/grafana influxdb: image: influxdb container_name: influxdb restart: always ports: - 8086:8086 networks: - monitoring volumes: - influxdb-volume:/var/lib/influxdbnetworks: monitoring:volumes: grafana-volume: external: true influxdb-volume: external: true El cual nos crea dos contenedores uno con grafana y otro con influxdb.</description></item></channel></rss>